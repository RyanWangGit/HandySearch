name: build

on: [push]

jobs:
  build:
    strategy:
      matrix:
        # TODO: add windows-latest when QT supports MSVC2019 
        # or Github Actions supports MSVC2017 in windows-latest
        # windows builds also need specifying building 64bit target:
        # if [[ "$OSTYPE" == "msys" ]]; then export WINEXTRA="-DCMAKE_GENERATOR_PLATFORM=x64"; else export WINEXTRA=""; fi
        os: [ubuntu-latest, macOS-latest]
        # ubuntu uses g++ / macos uses clang ++
        qt: [5.12.10, 5.15.2, 6.0.0]
        exclude: 
          # exclude old qt version of macOS
          - {os: 'macOS-latest', qt: '5.12.10'}
          - {os: 'macOS-latest', qt: '5.15.2'}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    # TODO: remove this when Github Actions has Qt built-in in the future
    - name: Install Qt ${{ matrix.qt }}
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        modules: "qtsql"
    - name: Install OpenGL support for QT (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libgl1-mesa-dev
        
    - name: Debug build and test
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..
        cmake --build . --config Debug
        
    - name: Release build and test
      run: |
        rm -rf build && mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
        ctest -V
        
    - name: Upload to codecov
      uses: codecov/codecov-action@v1
